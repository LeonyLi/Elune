<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.elune.dao.UserlogMapper">
  <resultMap id="BaseResultMap" type="com.elune.entity.UserlogEntity">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="uid" jdbcType="BIGINT" property="uid" />
    <result column="type" jdbcType="TINYINT" property="type" />
    <result column="before_status" jdbcType="VARCHAR" property="beforeStatus" />
    <result column="after_status" jdbcType="VARCHAR" property="afterStatus" />
    <result column="link" jdbcType="VARCHAR" property="link" />
    <result column="ip" jdbcType="VARCHAR" property="ip" />
    <result column="ua" jdbcType="VARCHAR" property="ua" />
    <result column="create_time" jdbcType="INTEGER" property="createTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, uid, type, before_status, after_status, link, ip, ua, create_time
  </sql>
  <select id="selectByExample" parameterType="com.elune.entity.UserlogEntityExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_userlog
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_userlog
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_userlog
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.elune.entity.UserlogEntityExample">
    delete from t_userlog
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.elune.entity.UserlogEntity">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_userlog (uid, type, before_status, 
      after_status, link, ip, 
      ua, create_time)
    values (#{uid,jdbcType=BIGINT}, #{type,jdbcType=TINYINT}, #{beforeStatus,jdbcType=VARCHAR}, 
      #{afterStatus,jdbcType=VARCHAR}, #{link,jdbcType=VARCHAR}, #{ip,jdbcType=VARCHAR}, 
      #{ua,jdbcType=VARCHAR}, #{createTime,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.elune.entity.UserlogEntity">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_userlog
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="uid != null">
        uid,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="beforeStatus != null">
        before_status,
      </if>
      <if test="afterStatus != null">
        after_status,
      </if>
      <if test="link != null">
        link,
      </if>
      <if test="ip != null">
        ip,
      </if>
      <if test="ua != null">
        ua,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="uid != null">
        #{uid,jdbcType=BIGINT},
      </if>
      <if test="type != null">
        #{type,jdbcType=TINYINT},
      </if>
      <if test="beforeStatus != null">
        #{beforeStatus,jdbcType=VARCHAR},
      </if>
      <if test="afterStatus != null">
        #{afterStatus,jdbcType=VARCHAR},
      </if>
      <if test="link != null">
        #{link,jdbcType=VARCHAR},
      </if>
      <if test="ip != null">
        #{ip,jdbcType=VARCHAR},
      </if>
      <if test="ua != null">
        #{ua,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.elune.entity.UserlogEntityExample" resultType="java.lang.Long">
    select count(*) from t_userlog
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_userlog
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.uid != null">
        uid = #{record.uid,jdbcType=BIGINT},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=TINYINT},
      </if>
      <if test="record.beforeStatus != null">
        before_status = #{record.beforeStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.afterStatus != null">
        after_status = #{record.afterStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.link != null">
        link = #{record.link,jdbcType=VARCHAR},
      </if>
      <if test="record.ip != null">
        ip = #{record.ip,jdbcType=VARCHAR},
      </if>
      <if test="record.ua != null">
        ua = #{record.ua,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_userlog
    set id = #{record.id,jdbcType=BIGINT},
      uid = #{record.uid,jdbcType=BIGINT},
      type = #{record.type,jdbcType=TINYINT},
      before_status = #{record.beforeStatus,jdbcType=VARCHAR},
      after_status = #{record.afterStatus,jdbcType=VARCHAR},
      link = #{record.link,jdbcType=VARCHAR},
      ip = #{record.ip,jdbcType=VARCHAR},
      ua = #{record.ua,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.elune.entity.UserlogEntity">
    update t_userlog
    <set>
      <if test="uid != null">
        uid = #{uid,jdbcType=BIGINT},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=TINYINT},
      </if>
      <if test="beforeStatus != null">
        before_status = #{beforeStatus,jdbcType=VARCHAR},
      </if>
      <if test="afterStatus != null">
        after_status = #{afterStatus,jdbcType=VARCHAR},
      </if>
      <if test="link != null">
        link = #{link,jdbcType=VARCHAR},
      </if>
      <if test="ip != null">
        ip = #{ip,jdbcType=VARCHAR},
      </if>
      <if test="ua != null">
        ua = #{ua,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.elune.entity.UserlogEntity">
    update t_userlog
    set uid = #{uid,jdbcType=BIGINT},
      type = #{type,jdbcType=TINYINT},
      before_status = #{beforeStatus,jdbcType=VARCHAR},
      after_status = #{afterStatus,jdbcType=VARCHAR},
      link = #{link,jdbcType=VARCHAR},
      ip = #{ip,jdbcType=VARCHAR},
      ua = #{ua,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>